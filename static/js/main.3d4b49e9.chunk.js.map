{"version":3,"sources":["img/logo.png","components/header.js","components/search.js","redux/action.js","components/CharacterItem.js","img/spinner.gif","components/spinner.js","components/CharacterGrid.js","App.js","reportWebVitals.js","redux/reducer.js","redux/store.js","index.js"],"names":["Header","className","src","logo","alt","Search","useState","username","setUsername","dispatch","useDispatch","useEffect","verify","useCallback","func","wait","immediate","timeout","args","context","later","apply","callNow","clearTimeout","setTimeout","debounce","name","type","payload","placeholder","onChange","e","target","value","autoFocus","CharacterItem","character","img","portrayed","nickname","birthday","status","Spinner","spinner","style","width","margin","display","CharacterGrid","checkLoading","allCharacters","map","char_id","App","useSelector","state","data","charName","input","loading","error","axios","get","then","response","setCharacters","catch","message","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3d4b49e9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.e6ecab44.png\";","import React from 'react'\r\nimport logo from '../img/logo.png'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className='center'>\r\n      <img src={logo} alt='header-logo' />\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header","\r\nimport React, { useState, useCallback , useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { setInput } from '../redux/action';\r\n\r\nconst Search = () => {\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  \r\n  const dispatch = useDispatch();\r\n\r\n  function debounce(func, wait, immediate) {\r\n    var timeout;\r\n  \r\n    return (...args) => {\r\n      var context = this;\r\n  \r\n      var later = () => {\r\n        timeout = null;\r\n        if (!immediate) func.apply(context, args);\r\n      };\r\n  \r\n      var callNow = immediate && !timeout;\r\n  \r\n      clearTimeout(timeout);\r\n  \r\n      timeout = setTimeout(later, wait);\r\n  \r\n      if (callNow) func.apply(context, args);\r\n    };\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n      verify(username);\r\n  }, [username]);\r\n\r\n\r\n\r\n  const verify = useCallback(\r\n    debounce(name => {\r\n      dispatch(setInput(name));\r\n    }, 300),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <section className='search'>\r\n      <form>\r\n        <input\r\n          type='text'\r\n          className='form-control'\r\n          placeholder='Search characters'\r\n          data-testid = \"input-text\"\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          autoFocus\r\n        />\r\n      </form>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Search","export const setCharacters =(response)=>{\r\n    return {\r\n      type:\"SET_CHARACTERS\",\r\n      payload : response\r\n    }\r\n  }\r\n\r\n  export const setInput =(text)=>{\r\n    return {\r\n      type:\"SET_INPUT\",\r\n      payload : text\r\n    }\r\n  }\r\n\r\n  export const setLoading =(value)=>{\r\n    return {\r\n      type:\"SET_LOADING\",\r\n      payload : value\r\n    }\r\n  }\r\n\r\n  export const setError =(msg)=>{\r\n    return {\r\n      type:\"SET_ERROR\",\r\n      payload : msg\r\n    }\r\n  }\r\n","import React from 'react'\n\nconst CharacterItem = ({ character }) => {\n\n // console.log(character);\n  return (\n    <div className='card'>\n      <div className='card-inner'>\n        <div className='card-front'>\n          <img src={character.img} alt='image' />\n        </div>\n        <div className='card-back'>\n          <h1>{character.name}</h1>\n          <ul>\n            <li>\n              <strong>Actor Name:</strong> {character.portrayed}\n            </li>\n            <li>\n              <strong>Nickname:</strong> {character.nickname}\n            </li>\n            <li>\n              <strong>Birthday:</strong> {character.birthday}\n            </li>\n            <li>\n              <strong>Status:</strong> {character.status}\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default CharacterItem\n","export default __webpack_public_path__ + \"static/media/spinner.11d9cde8.gif\";","import React from 'react'\r\nimport spinner from '../img/spinner.gif'\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <img\r\n      src={spinner}\r\n      style={{ width: '200px', margin: 'auto', display: 'block' }}\r\n      alt='Loading'\r\n    />\r\n  )\r\n}\r\n\r\nexport default Spinner","import React from 'react'\nimport CharacterItem from './CharacterItem'\nimport Spinner from './spinner'\n\nconst CharacterGrid = ({ checkLoading , allCharacters }) => {\n\n  //console.log(allCharacters);\n  return checkLoading ? (\n    <Spinner />\n  ) :  (\n    <section className='cards'>\n      {allCharacters.map((character) => (\n        <CharacterItem key={character.char_id} character={character}></CharacterItem>\n      ))}\n    </section>\n  )\n}\n\nexport default CharacterGrid\n","\nimport { useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Header from './components/header'\nimport Search from './components/search'\nimport CharacterGrid from './components/CharacterGrid'\nimport { useDispatch , useSelector} from 'react-redux';\nimport { setCharacters, setError, setLoading } from './redux/action';\n\n\n\nfunction App() {\n\nconst allCharacters= useSelector(state => state.data);\nconst charName = useSelector(state => state.input);\nconst checkLoading = useSelector(state=> state.loading);\nconst error = useSelector(state=>state.error);\n\nconst dispatch = useDispatch();\n\nconst fetchCharacters= ()=>\n  {\n  axios.get(`https://breakingbadapi.com/api/characters?name=${charName}`)\n  .then((response)=>{dispatch(setCharacters(response.data))})\n  .catch((error)=>{dispatch(setError(error.message))})\n  dispatch(setLoading(false));\n  }\n  \n  \n  useEffect(()=>{\n    fetchCharacters();\n  },[charName]);\n\n\n  return (\n    <div className=\"App\">\n     \n      <Header/>\n      <Search/>\n      {error && <h1>{error}</h1>}\n      <CharacterGrid checkLoading={checkLoading} allCharacters={allCharacters}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState= {\r\n    loading : true,\r\n    data :[],\r\n    input :'',\r\n    error : ''\r\n}\r\n\r\n export const reducer=(state=initialState, {type,payload})=>{\r\n    switch(type)\r\n    {\r\n        \r\n        case \"SET_CHARACTERS\" :\r\n            return{\r\n                ...state,\r\n                loading : false,\r\n                data : payload,\r\n                error : ''\r\n            }\r\n        case \"SET_INPUT\":\r\n            return{\r\n                ...state,\r\n                loading : false,\r\n                input : payload,\r\n            }\r\n         case \"SET_ERROR\":\r\n                return{\r\n                    ...state,\r\n                    loading : true,\r\n                    error : payload,\r\n                }\r\n        default :\r\n        return state\r\n    }\r\n}\r\n\r\n\r\n","import { createStore } from \"redux\";\r\n\r\nimport { reducer} from \"./reducer\";\r\n//import { combineReducers } from \"redux\";\r\n\r\n//const allReducers = combineReducers({characters : charReducer })\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n//store.subscribe(()=>{console.log(store.getState())});\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/store'\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}